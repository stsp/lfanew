= lfanew

// Macros to work around AsciiDoc lossage. :-|
:plus: +
:lowline: _
:or: |
:nbsp:  
:bcmt: /*{nbsp}
:ecmt: {nbsp}*/
:bopt: [
:eopt: ]

`lfanew` comprises

* a tool to manipulate fat binary programs wrapped inside MS-DOS `MZ` files;
* plus a simple C code library for working with binary files, including MS-DOS executables.

== Tool

:fn-pietrek-19: footnote:pietrek-19[M. Pietrek.  Inside Windows: an in-depth look into the Win32 Portable Executable file format.  MSDN Magazine, Feb 2002.  https://learn.microsoft.com/en-us/archive/msdn-magazine/2002/february/inside-windows-win32-portable-executable-file-format-in-detail.]

Usage:

* ``lfanew`` [``-k``] ``-o`` __out-stub-file__ __in-stub-file__
* ``lfanew -U`` [``-k``] ``-o`` __out-payload-file__ __in-fat-file__

Options:

* On default, `lfanew` adds a `.e_lfanew` header field{fn-pietrek-19} to an old-style `MZ` executable program, so that the program can potentially be used as an MS-DOS loader stub for a modern "new executable" format.
* `-U` ("unstubify"): tells `lfanew` to extract the "new executable" payload contained inside a fat binary.
* `-k` ("keep"): says to keep the output file in case of an error, rather than delete it.

== Code library

=== Types

[cols="1,1"]
|===
<| Type <| Notes

| a| **``▗▚▚▚▚ <nexgen/mzendian.h> ▞▞▞▞▖``**

		* **This header defines types and routines for accessing unaligned little endian binary data in a type-checked manner.**
		* **``<nexgen/mzendian.h>`` also includes ``<stdint.h>``.**

| ``uint_le16_t`` | Unaligned 16-bit little endian binary numeral.  This type can be used directly inside a ``struct`` corresponding to a binary file structure, but should otherwise be treated as opaque.
| ``uint_le32_t`` | Unaligned 32-bit little endian binary numeral.  This type can be used directly inside a ``struct`` corresponding to a binary file structure, but should otherwise be treated as opaque.
| ``uint_le64_t`` | Unaligned 64-bit little endian binary numeral.  This type can be used directly inside a ``struct`` corresponding to a binary file structure, but should otherwise be treated as opaque.
2+|
| | **``▗▚▚▚▚ <nexgen/mzhdr.h> ▞▞▞▞▖``**
| ``mz_hdr_t`` | ``MZ`` structure{fn-pietrek-19} at the beginning of an MS-DOS or Windows program.
|===

=== Functions

[cols="1,1"]
|===
<| Function <| Notes

| | **``▗▚▚▚▚ <nexgen/mzendian.h> ▞▞▞▞▖``**
| ``uint_le16_t hle16 (uint16_t`` __x__``);`` .3+| Converts __x__ from host byte order to little endian.
| ``uint_le32_t hle32 (uint32_t`` __x__``);``
| ``uint_le64_t hle64 (uint64_t`` __x__``);``
| ``uint16_t leh16 (uint_le16_t`` __x__``);`` .3+| Converts __x__ from little endian to host byte order.
| ``uint32_t leh32 (uint_le32_t`` __x__``);``
| ``uint64_t leh64 (uint_le64_t`` __x__``);``
|===
