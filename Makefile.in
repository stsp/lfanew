# Copyright (c) 2023 TK Chia
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

DESTDIR =
abs_srcdir = @abs_srcdir@
srcdir = @srcdir@
objdir = .
VPATH = $(srcdir)
mkinstalldirs = $(SHELL) $(srcdir)/mkinstalldirs

prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
includedir = @includedir@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
AWK = @AWK@

CC = @CC@
CPPFLAGS = @CPPFLAGS@ -I$(srcdir)/h -I$(objdir)/h
CFLAGS = @CFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
OBJEXT = @OBJEXT@
EXEEXT = @EXEEXT@

lfanew_cv_prog_wincc_ldscripts_i386pe_x \
= @lfanew_cv_prog_wincc_ldscripts_i386pe_x@
lfanew_cv_prog_wincc_ldscripts_i386pep_x \
= @lfanew_cv_prog_wincc_ldscripts_i386pep_x@

PROGRAMS = lfanew$(EXEEXT)
HEADERS = h/lfanew/io.h \
	  h/lfanew/_config.h \
	  h/lfanew/_version.h \
	  h/nexgen/mzendian.h \
	  h/nexgen/mzhdr.h
SCRIPTS =
ifneq "none" "$(lfanew_cv_prog_wincc_ldscripts_i386pe_x)"
  SCRIPTS += ldscripts/i386pebc.x
endif
ifneq "none" "$(lfanew_cv_prog_wincc_ldscripts_i386pep_x)"
  SCRIPTS += ldscripts/i386pepbc.x
endif

default: $(PROGRAMS) $(HEADERS) $(SCRIPTS)
.PHONY: default

all: default
.PHONY: all

install: $(PROGRAMS) $(HEADERS)
	$(mkinstalldirs) $(DESTDIR)$(bindir) \
	  $(sort $(dir $(HEADERS:h/%=$(DESTDIR)$(includedir)/%)))
	$(INSTALL_PROGRAM) $(filter-out %.h,$^) $(DESTDIR)$(bindir)
	set -e; \
	for h in $(HEADERS:h/%=%); do \
	  if test -f h/"$$h"; then \
	    $(INSTALL_DATA) h/"$$h" $(DESTDIR)$(includedir)/"$$h"; \
	  else \
	    $(INSTALL_DATA) $(srcdir)/h/"$$h" $(DESTDIR)$(includedir)/"$$h"; \
	  fi; \
	done
.PHONY: install

clean mostlyclean:
	$(RM) *.[oa] $(PROGRAMS) $(SCRIPTS) *~
.PHONY: clean mostlyclean

distclean maintainer-clean: clean
	$(RM) Makefile config.cache config.log config.status h/lfanew/_*.h
.PHONY: distclean maintainer-clean

check check-local: tests/testsuite
	exec $< -C tests $(TESTSUITEFLAGS)
.PHONY: check check-local

installcheck installcheck-local: tests/testsuite
	exec $< --x-installcheck -C tests $(TESTSUITEFLAGS)
.PHONY: installcheck installcheck-local

helpcheck: tests/testsuite
	exec $< -C tests --help $(TESTSUITEFLAGS)
.PHONY: helpcheck

listcheck: tests/testsuite
	exec $< -C tests --list $(TESTSUITEFLAGS)
.PHONY: listcheck

lfanew$(EXEEXT): lfanew.$(OBJEXT)

lfanew.$(OBJEXT): lfanew.c $(HEADERS)

%$(EXEEXT): %.o
	$(CC) $(LDFLAGS) $(TARGET_ARCH) $^ $(LOADLIBES) $(LDLIBS) $(LIBS) -o $@

ldscripts/i386pebc.x: patch-lds.awk $(lfanew_cv_prog_wincc_ldscripts_i386pe_x)
	mkdir -p $(@D)
	$(AWK) -f $< $(lfanew_cv_prog_wincc_ldscripts_i386pe_x) >$@.tmp
	mv $@.tmp $@

ldscripts/i386pepbc.x: patch-lds.awk \
		       $(lfanew_cv_prog_wincc_ldscripts_i386pep_x)
	mkdir -p $(@D)
	$(AWK) -f $< $(lfanew_cv_prog_wincc_ldscripts_i386pep_x) >$@.tmp
	mv $@.tmp $@

# Copy the generated tests/testsuite from the source directory to the build
# directory, or create a symlink from the latter to the former --- but only
# if the two directories are different.
tests/testsuite: $(abs_srcdir)/tests/testsuite
	set -e; \
	if test \! $@ -ef $<; then \
	  $(RM) $@.tmp; \
	  ln -s $< $@.tmp || cp $< $@.tmp; \
	  mv $@.tmp $@; \
	fi
.PRECIOUS: tests/testsuite

$(abs_srcdir)/tests/testsuite: $(abs_srcdir)/tests/testsuite.at \
			       $(wildcard $(abs_srcdir)/tests/*.at \
					  $(abs_srcdir)/tests/*.in)
	cd $(abs_srcdir)/tests && exec autom4te --language=autotest -o $@ $<
.PRECIOUS: $(abs_srcdir)/tests/testsuite
